{"20230829185108":{"body":"---\ntitle: Index\naliases:\n  - Index\nlinter-yaml-title-alias: Index\n---\n\n# Index\n\nThis is my Second Brain (not to be confused with the \"Second Brain\" note taking system popularized by Tiago Forte). This is literally a place where I store information that I find interesting and want to remember.\n\n- [[20230831225332|Artificial Intelligence]]\n- [[20230906110216|Car]]\n- [[20230905182219|Career]]\n- [[20230905231714|Database]]\n- [[20230905182010|Entertainment]]\n- [[20230905163307|Investment]]\n- [[20230905181647|JavaScript]]\n- [[20230906102524|Language]]\n- [[20230829215741|Learning]]\n- [[20230923165717|macOS]]\n- [[20230906015259|Parenting]]\n- [[20230906012918|Philosophy]]\n- [[20230905181514|React]]\n- [[20230906105804|Software Engineering]]\n- [[20230905231849|SQL]]\n- [[20230906102428|Travel]]\n- [[20230905163648|TypeScript]]\n- [[20230918233440|Testing]]\n- [[20230923172901|Universe]]\n- [[20230831185014|Zettelkasten]]\n","title":"Index","referenced":[]},"20230829215222":{"body":"---\ntitle: Structured Reading with Q/E/C\naliases:\n  - Structured Reading with Q/E/C\n  - QEC Reading Structure\nlinter-yaml-title-alias: Structured Reading with Q/E/C\n---\n\n# Structured Reading with Q/E/C\n\n- Q/E/C stands for **Q**uestion / **E**vidence / **C**onclusion\n\t- Developed by Cal Newport\n\t- Allows us to breakdown information into \"atomic\" ideas. And we can make our own atomic notes\n\n## How Does it Work\n\n[[20230831172634|Learning is a passive process]]. When learning a new thing, **actively** restructuring and breaking it down would help.\n\n## Reference\n\n- [How To Take Smart Notes (3 methods no one's talking about) by Vicky Zhao [BEEAMP]](https://www.youtube.com/watch?v=5O46Rqh5zHE)\n","title":"Structured Reading with Q/E/C","referenced":["20230829215741"]},"20230829215741":{"body":"---\ntitle: \"[MOC] Learning\"\naliases:\n  - \"[MOC] Learning\"\n  - Learning\nlinter-yaml-title-alias: \"[MOC] Learning\"\n---\n\n# [MOC] Learning\n\n## Strategy for Learning\n\n- [[20230829215222|Structured Reading with Q/E/C]]\n\n## Nature of Learning\n\n- [[20230831172634|Learning is Usually Passive]]\n","title":"[MOC] Learning","referenced":["20230829185108"]},"20230831172634":{"body":"---\ntitle: Learning is Usually Passive\naliases:\n  - Learning is Usually Passive\nlinter-yaml-title-alias: Learning is Usually Passive\n---\n\n# Learning is Usually Passive\n\n- We learn from books, articles, podcasts, videos, etc.\n\t- These are contents prepared by others\n\t- We will follow the author's flow\n\t- Hence hard for our brain to internalize the idea\n\n## Reference\n\n- [How To Take Smart Notes (3 methods no one's talking about) by Vicky Zhao [BEEAMP]](https://www.youtube.com/watch?v=5O46Rqh5zHE)\n","title":"Learning is Usually Passive","referenced":["20230829215222","20230829215741"]},"20230831184856":{"body":"---\ntitle: The Compass of Zettelkasten\naliases:\n  - The Compass of Zettelkasten\nlinter-yaml-title-alias: The Compass of Zettelkasten\n---\n\n# The Compass of Zettelkasten\n\nA thinking tool to help connecting ideas.\n\n- Vertically\n\t- North = Where X comes from?\n\t- South = Where X leads to?\n- Horizontally\n\t- West = What is similar to X?\n\t- East = What is opposite of X?\n\n# References\n\n- [How To Take Smart Notes (3 methods no one's talking about) by Vicky Zhao [BEEAMP]](https://www.youtube.com/watch?v=5O46Rqh5zHE)\n","title":"The Compass of Zettelkasten","referenced":["20230831185014"]},"20230831185014":{"body":"---\ntitle: \"[MOC] Zettelkasten\"\naliases:\n  - \"[MOC] Zettelkasten\"\n  - Zettelkasten\nlinter-yaml-title-alias: \"[MOC] Zettelkasten\"\n---\n\n# [MOC] Zettelkasten\n\n## Frameworks for Thinking\n\n- [[20230831184856|The Compass of Zettelkasten]]\n","title":"[MOC] Zettelkasten","referenced":["20230829185108"]},"20230831190140":{"body":"---\ntitle: Instruction Tuned LLM\naliases:\n  - Instruction Tuned LLM\nlinter-yaml-title-alias: Instruction Tuned LLM\n---\n\n# Instruction Tuned LLM\n\n- Trained to follow instruction, hence are able to answer questions\n- Different from [[20230831230222|Base LLM]] which is good at predicting the next word\n\t- Only predicting the next work means the model will try to generate another question when given one\n- Can be further refined by Reinforcement Learning with Human Feedback (RLHF)\n\t- To make the model good - helpful, honest, harmless\n","title":"Instruction Tuned LLM","referenced":["20230831225332"]},"20230831225332":{"body":"---\ntitle: \"[MOC] Artificial Intelligence\"\naliases:\n  - \"[MOC] Artificial Intelligence\"\n  - Artificial Intelligence\nlinter-yaml-title-alias: \"[MOC] Artificial Intelligence\"\n---\n\n# [MOC] Artificial Intelligence\n\n## Large Language Model\n\n- [[20230831190140|Instruction Tuned LLM]]\n- [[20230831230222|Base LLM]]\n","title":"[MOC] Artificial Intelligence","referenced":["20230829185108"]},"20230831230222":{"body":"---\ntitle: Base LLM\naliases:\n  - Base LLM\nlinter-yaml-title-alias: Base LLM\n---\n\n# Base LLM\n\n- Basic form of an LLM which is good at predicting the next word.\n\n## References\n\n- [ChatGPT Prompt Engineering for Developers - DeepLearning.AI](https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/)\n","title":"Base LLM","referenced":["20230831190140","20230831225332"]},"20230905163234":{"body":"---\ntitle: Review on Masterworks\naliases:\n  - Review on Masterworks\nlinter-yaml-title-alias: Review on Masterworks\n---\n\n# Review on Masterworks\n\n- Minimum investment: $1000\n\n## Pros\n\n- Alternative investment, especially in high inflation periods\n- With experts to look for and take care of the artworks for investment\n- Liquidity through secondary market\n- Make fine-art investment accessible to regular investors\n\n## Cons\n\n- High management fee\n\t- 1.5% annual + 20% profit\n\t- In return for the team, legal service etc.\n- Also need to pay for auction commission (13%) before product\n- Estimate: if less than 20% annualized return, the final return would be less than Index Fund ETF\n- High risk investment\n- No recurring income stream\n- Take long time for the profit to realize\n- Can only sell the fractional share early in the secondary market\n- Profits not considered capital gains. May subject to higher tax rates\n- Secondary market only available to US citizen\n\n## References\n\n- [Masterworks Review 2023: Invest in Artwork](https://thecollegeinvestor.com/23435/masterworks-review/)\n- [Masterworks Review 2023 – Forbes Advisor](https://www.forbes.com/advisor/investing/masterworks-review/)\n","title":"Review on Masterworks","referenced":["20230905163307"]},"20230905163307":{"body":"---\ntitle: \"[MOC] Investment\"\naliases:\n  - \"[MOC] Investment\"\n  - Investment\nlinter-yaml-title-alias: \"[MOC] Investment\"\n---\n\n# [MOC] Investment\n\n## Alternative Investments\n\n- Masterworks is an online platform that allow investors to have fractional shares on artworks. [[20230905163234|Review on Masterworks]]\n","title":"[MOC] Investment","referenced":["20230829185108"]},"20230905163618":{"body":"---\ntitle: TypeScript Partial is Preferred over Undefined Record Value\naliases:\n  - TypeScript Partial is Preferred over Undefined Record Value\nlinter-yaml-title-alias: TypeScript Partial is Preferred over Undefined Record Value\n---\n\n# TypeScript Partial is Preferred over Undefined Record Value\n\n`Partial` works for type annotation in this case\n\n```typescript\nenum Format {\n  Color = \"color\"\n  Size = \"size\"\n}\n\nconst count: Partial<Record<Format, number>> = {};\n```\n\n`Record<Format, number | undefined>` does not\n\n```typescript\nenum Format {\n  Color = \"color\"\n  Size = \"size\"\n}\n\n// Will complain keys missing for `count`\nconst count: Record<Format, number | undefined> = {};\n```\n","title":"TypeScript Partial is Preferred over Undefined Record Value","referenced":["20230905163648"]},"20230905163648":{"body":"---\ntitle: \"[MOC] TypeScript\"\naliases:\n  - \"[MOC] TypeScript\"\n  - TypeScript\nlinter-yaml-title-alias: \"[MOC] TypeScript\"\n---\n\n# [MOC] TypeScript\n\n- [[20230905163618|TypeScript Partial is Preferred over Undefined Record Value]]\n","title":"[MOC] TypeScript","referenced":["20230829185108"]},"20230905181416":{"body":"---\ntitle: \"Million.js\"\naliases:\n  - Million.js\nlinter-yaml-title-alias: Million.js\n---\n\n# Million.js\n\nMakes React renders faster\n\n[GitHub - aidenybaimillion The Virtual DOM Replacement for React](https://github.com/aidenybai/million) replaces the Virtual DOM for React components to make it faster\n\n## References\n\n- [GitHub - aidenybaimillion The Virtual DOM Replacement for React](https://github.com/aidenybai/million)\n- [High-school student makes React a million times faster - YouTube](https://www.youtube.com/watch?v=VkezQMb1DHw)\n","title":"Million.js","referenced":["20230905181514"]},"20230905181514":{"body":"---\ntitle: \"[MOC] React\"\naliases:\n  - \"[MOC] React\"\n  - React\nlinter-yaml-title-alias: \"[MOC] React\"\n---\n\n# [MOC] React\n\n## Hooks\n\n- [[20230906102053|React `setState` Updater is not Always Necessary]]\n- [[20230906102251|Use a Reducer if the Next State is Calculated from Other State Variables]]\n\n## Tools\n\n- [[20230905181416|Million.js]] makes react renders faster\n","title":"[MOC] React","referenced":["20230829185108","20230905181647"]},"20230905181647":{"body":"---\ntitle: \"[MOC] JavaScript\"\naliases:\n  - \"[MOC] JavaScript\"\n  - JavaScript\nlinter-yaml-title-alias: \"[MOC] JavaScript\"\n---\n\n# [MOC] JavaScript\n\n- [[20230905181514|React]]\n","title":"[MOC] JavaScript","referenced":["20230829185108","20230929005758"]},"20230905181837":{"body":"---\ntitle: Buy Nintendo HK Prepaid Credits Online\naliases:\n  - Buy Nintendo HK Prepaid Credits Online\nlinter-yaml-title-alias: Buy Nintendo HK Prepaid Credits Online\n---\n\n# Buy Nintendo HK Prepaid Credits Online\n\nTry [iGameBuy](https://www.igamebuy.com/products/product_13589.html) next time. Instead of the one that charges service fee.\n\n## References\n\n- [iGameBuy](https://www.igamebuy.com/products/product_13589.html)\n","title":"Buy Nintendo HK Prepaid Credits Online","referenced":["20230905182010"]},"20230905182010":{"body":"---\ntitle: \"[MOC] Entertainment\"\naliases:\n  - \"[MOC] Entertainment\"\n  - Entertainment\nlinter-yaml-title-alias: \"[MOC] Entertainment\"\n---\n\n# [MOC] Entertainment\n\n## Other\n\n- [[20230905181837|Buy Nintendo HK Prepaid Credits Online]]\n","title":"[MOC] Entertainment","referenced":["20230829185108"]},"20230905182129":{"body":"---\ntitle: Performance Review should Focus on Business Goals\naliases:\n  - Performance Review Should Focus on Business Goals\nlinter-yaml-title-alias: Performance Review Should Focus on Business Goals\n---\n\n# Performance Review Should Focus on Business Goals\n\nJust like any decision made in the daily work, performance should be measured in a business-oriented way, not how much work you have done.\n\n## References\n\n[Don't make the same 3 performance review mistakes I made](https://careercutler.substack.com/i/127435388/mistake-not-speaking-in-business-goals)\n","title":"Performance Review should Focus on Business Goals","referenced":["20230905182219"]},"20230905182219":{"body":"---\ntitle: \"[MOC] Career\"\naliases:\n  - \"[MOC] Career\"\n  - Career\nlinter-yaml-title-alias: \"[MOC] Career\"\n---\n\n# [MOC] Career\n\n## Interview\n\n- [[20230918233833|Preparing for Coding Interview]]\n\n## Performance Review\n\n- [[20230905182129|Performance Review should Focus on Business Goals]]\n- [[20230905183030|Performance Review should be Precise and High-Level]]\n\n## Learning\n\n- [[20230906105539|Learning Resources for Senior Engineers]]\n","title":"[MOC] Career","referenced":["20230829185108"]},"20230905183030":{"body":"---\ntitle: Performance Review should be Precise and High-Level\naliases:\n  - Performance Review Should Be Precise and High-Level\nlinter-yaml-title-alias: Performance Review Should Be Precise and High-Level\n---\n\n# Performance Review Should Be Precise and High-Level\n\n- Don't write in too detailed. No one is interested in it except you.\n- Can touch some technical stuffs but in high-level on how you made it\n\n## References\n\n[Don't make the same 3 performance review mistakes I made](https://careercutler.substack.com/i/127435388/mistake-being-way-too-verbose)\n","title":"Performance Review should be Precise and High-Level","referenced":["20230905182219"]},"20230905231044":{"body":"---\ntitle: UNION Operation will Sort the Result\naliases:\n  - \"`UNION` Operation Will Sort the Result\"\nlinter-yaml-title-alias: \"`UNION` Operation Will Sort the Result\"\n---\n\n# `UNION` Operation Will Sort the Result\n\n- Because it will deduplicate the result by sorting the data\n- Depends on the database system so some db will have different behaviour\n- Use `UNION ALL` if want to show all.\n\n## References\n\n[Databases: Relational Databases and SQL](https://learning.edx.org/course/course-v1:StanfordOnline+SOE.YDB-SQL0001+2T2020/home)\n","title":"UNION Operation will Sort the Result","referenced":["20230905231714","20230905231849"]},"20230905231714":{"body":"---\ntitle: \"[MOC] Database\"\naliases:\n  - \"[MOC] Database\"\n  - Database\nlinter-yaml-title-alias: \"[MOC] Database\"\n---\n\n# [MOC] Database\n\n## Features\n\n- [[20230905231044|`UNION` operation will deduplicate the result]]\n","title":"[MOC] Database","referenced":["20230829185108"]},"20230905231849":{"body":"---\ntitle: \"[MOC] SQL\"\naliases:\n  - \"[MOC] SQL\"\n  - SQL\nlinter-yaml-title-alias: \"[MOC] SQL\"\n---\n\n# [MOC] SQL\n\n- [[20230905231044|`UNION` operation will deduplicate the result]]\n","title":"[MOC] SQL","referenced":["20230829185108"]},"20230906012837":{"body":"---\ntitle: Ancient Chinese People Thought Truth had Already been Found\naliases:\n  - Ancient Chinese People Thought Truth Had Already Been Found\nlinter-yaml-title-alias: Ancient Chinese People Thought Truth Had Already Been Found\n---\n\n# Ancient Chinese People Thought Truth Had Already Been Found\n\nAncient Chinese people thought that truth has already been defined / discovered since the beginning.\n\nDuring 春秋戰國, there were many philosophers and they were regarded as the authority. And what the future generations did were just trying to explain what those people were thinking. This means in Chinese people believed those philosophers has already figured out everything.\n\n## References\n\n- [超級歪直播 EP12: 倫敦留學一個月，我的感想是...](https://youtu.be/83FmRRdA33E)\n","title":"Ancient Chinese People Thought Truth had Already been Found","referenced":["20230906012918"]},"20230906012918":{"body":"---\ntitle: \"[MOC] Philosophy\"\naliases:\n  - \"[MOC] Philosophy\"\n  - Philosophy\nlinter-yaml-title-alias: \"[MOC] Philosophy\"\n---\n\n# [MOC] Philosophy\n\n## Chinese Philosophy\n\n- [[20230906012837|Ancient Chinese People Thought Truth had Already been Found]]\n","title":"[MOC] Philosophy","referenced":["20230829185108"]},"20230906015259":{"body":"---\ntitle: \"[MOC] Parenting\"\naliases:\n  - \"[MOC] Parenting\"\n  - Parenting\nlinter-yaml-title-alias: \"[MOC] Parenting\"\n---\n\n# [MOC] Parenting\n\n- [[20230906015356|KiwiCo]]\n","title":"[MOC] Parenting","referenced":["20230829185108"]},"20230906015356":{"body":"---\ntitle: KiwiCo Crates\naliases:\n  - KiwiCo\nlinter-yaml-title-alias: KiwiCo\n---\n\n# KiwiCo\n\n## Panda Crates\n\n- [Look with Me](https://www.kiwico.com/panda/look)\n- [Feel with Me](https://www.kiwico.com/panda/feel)\n\n## Koala Crates\n\n- [Ocean Games](https://www.kiwico.com/koala/oceangames)\n- [Color Mixing](https://www.kiwico.com/koala/colormix)\n- [Kitchen Play](https://www.kiwico.com/koala/kitchenplay)\n- [Alphabet Play](https://www.kiwico.com/koala/abc)\n- [Mail Delivery](https://www.kiwico.com/koala/mail)\n- [Neighborhood](https://www.kiwico.com/koala/neighborhood)\n- [Space Search](https://www.kiwico.com/koala/space)\n- [Little Driver](https://www.kiwico.com/koala/littledriver) - Learn the rules of the road with a play steering wheel and interactive map\n  - Pretend play\n  - Communication\n  - Following directions\n- [Jungle Fun](https://www.kiwico.com/koala/jungle) - Explore spatial concepts with a tree stackers and a jungle friends game\n\t- Fine Motor Skills\n\t- Stacking and Building\n\t- Spatial Concepts\n- [Doctor's Visit](https://www.kiwico.com/koala/doctor) - Pretend to be a doctor and learn how to take care of yourself and others!\n\t- Pretend Play\n\t- Communicating\n\t- Feelings & Emotions\n- [Forest Friends](https://www.kiwico.com/koala/forest) - Explore imaginative play and practice taking turns with forest-themed memory games and stuffies!\n\t- Taking Turns\n\t- Pretend Play\n\t- Matching & Sorting\n","title":"KiwiCo Crates","referenced":["20230906015259"]},"20230906102053":{"body":"---\ntitle: React setState Updater is not Always Necessary\naliases:\n  - React `setState` Updater is not Always Necessary\nlinter-yaml-title-alias: React `setState` Updater is not Always Necessary\n---\n\n# React `setState` Updater is not Always Necessary\n\n- An updater is a callback function to calculate the next state from previous state.\n- It is common to see people recommend using updater i.e. `setAge(a => a + 1)` to update the state. It is not necessary in most cases.\n- Most of the time it is the same as setting the state directly i.e. `setAge(age + 1)`\n- Updater is required if there are multiple updates within an event.\n\n## References\n\n[Is using an updater always preferred? | useState – React](https://react.dev/reference/react/useState#is-using-an-updater-always-preferred)\n","title":"React setState Updater is not Always Necessary","referenced":["20230905181514"]},"20230906102251":{"body":"---\ntitle: Use a Reducer if the Next State is Calculated from Other State Variables\naliases:\n  - Use a Reducer if the Next State is Calculated from Other State Variables\nlinter-yaml-title-alias: Use a Reducer if the Next State is Calculated from Other State Variables\n---\n\n# Use a Reducer if the Next State is Calculated from Other State Variables\n\n- If the next state is calculated from the previous state, use updater to update the state.\n- If the next state is calculated from other states, consider using a reducer.\n\n## References\n\n[Is using an updater always preferred? | useState – React](https://react.dev/reference/react/useState#is-using-an-updater-always-preferred)\n","title":"Use a Reducer if the Next State is Calculated from Other State Variables","referenced":["20230905181514"]},"20230906102359":{"body":"---\ntitle: French Words for Driving in Montreal\naliases:\n  - French Words for Driving in Montreal\nlinter-yaml-title-alias: French Words for Driving in Montreal\n---\n\n# French Words for Driving in Montreal\n\n- Nord = North\n- Sud = South\n- Est = East\n- Ouest = West\n- Sortie = Exit\n- Pont = Bridge\n- Barrée = closed/blocked\n- Rue = Street\n- Fin = End\n- Île = Island\n- Ligne d' arrêt = Stop line\n- Arrêt = Stop\n- Centre-Ville = Downtown/City Centre\n- Stationnement = Parking\n- Ville = City\n- Lundi = Monday\n- Mardi = Tuesday\n- Mercredi = Wednesday\n- Jeudi = Thursday\n- Vendredi = Friday\n- Samedi = Saturday\n- Dimanche = Sunday\n- Travaux = Work/Construction\n- École = School\n- Neige = Snow\n- Janvier = January\n- Février = February\n- Mars = March\n- Avril = April\n- Mai = May\n- Juin = June\n- Juillet = July\n- Août = August\n- Septembre = September\n- Octobre = October\n- Novembre = November\n- Decembre = December\n\n## References\n\n- [AdviceSuggestion for driving in Quebec province - Montreal Forum - Tripadvisor](https://www.tripadvisor.ca/ShowTopic-g155032-i51-k8638450-Advice_Suggestion_for_driving_in_Quebec_province-Montreal_Quebec.html)\n","title":"French Words for Driving in Montreal","referenced":["20230906102428","20230906102524"]},"20230906102428":{"body":"---\ntitle: \"[MOC] Travel\"\naliases:\n  - \"[MOC] Travel\"\n  - Travel\nlinter-yaml-title-alias: \"[MOC] Travel\"\n---\n\n# [MOC] Travel\n\n## Montreal\n\n- [[20230906102359|French Words for Driving in Montreal]]\n- [[20230906102647|Traffic Signs in Montreal]]\n","title":"[MOC] Travel","referenced":["20230829185108"]},"20230906102524":{"body":"---\ntitle: \"[MOC] Language\"\naliases:\n  - \"[MOC] Language\"\n  - Language\nlinter-yaml-title-alias: \"[MOC] Language\"\n---\n\n# [MOC] Language\n\n## French\n\n- [[20230906102359|French Words for Driving in Montreal]]\n","title":"[MOC] Language","referenced":["20230829185108"]},"20230906102647":{"body":"---\ntitle: Traffic Signs in Montreal\naliases:\n  - Traffic Signs in Montreal\nlinter-yaml-title-alias: Traffic Signs in Montreal\n---\n\n# Traffic Signs in Montreal\n\nSee [Signage and traffic  Ville de Montréal](https://montreal.ca/en/topics/signage-and-traffic)\n\n## References\n\n- [Signage and traffic  Ville de Montréal](https://montreal.ca/en/topics/signage-and-traffic)\n","title":"Traffic Signs in Montreal","referenced":["20230906102428"]},"20230906105539":{"body":"---\ntitle: Learning Resources for Senior Engineers\naliases:\n  - Learning Resources for Senior Engineers\nlinter-yaml-title-alias: Learning Resources for Senior Engineers\n---\n\n# Learning Resources for Senior Engineers\n\nSomeone [Ask HN What are some educational resources for more senior engineers  Hacker News](https://news.ycombinator.com/item?id=36438477). Here are some of the suggestions from the list\n\n- [[20230906110023|AWS Certified Solutions Architect]]\n- Learn how to communicate with co-workers outside engineering\n\n[[20230906105654|TODO]] Continue the list of learning resources\n\nPotential MOC\n\n# References\n\n- [Ask HN What are some educational resources for more senior engineers  Hacker News](https://news.ycombinator.com/item?id=36438477)\n","title":"Learning Resources for Senior Engineers","referenced":["20230905182219","20230906105804"]},"20230906105654":{"body":"---\ntitle: \"\"\naliases:\n  - TODO\n---\n","title":"20230906105654","referenced":["20230906105539","20230918222805"]},"20230906105804":{"body":"---\ntitle: \"[MOC] Software Engineering\"\naliases:\n  - \"[MOC] Software Engineering\"\n  - Software Engineering\nlinter-yaml-title-alias: \"[MOC] Software Engineering\"\n---\n\n# [MOC] Software Engineering\n\n## Learning Resources\n\n- [[20230906105539|Learning Resources for Senior Engineers]]\n","title":"[MOC] Software Engineering","referenced":["20230829185108"]},"20230906110023":{"body":"---\ntitle: AWS Certified Solutions Architect\naliases:\n  - AWS Certified Solutions Architect\nlinter-yaml-title-alias: AWS Certified Solutions Architect\n---\n\n# AWS Certified Solutions Architect\n\n- AWS Certificates may be something worth looking into.\n- Pricy - probably need company sponsorship\n\n# References\n\n- [AWS Certified Solutions Architect - Professional Certification  AWS Certification  AWS](https://aws.amazon.com/certification/certified-solutions-architect-professional/)\n","title":"AWS Certified Solutions Architect","referenced":["20230906105539"]},"20230906110152":{"body":"---\ntitle: Most Stolen Vehicles in Canada in 2022\naliases:\n  - Most Stolen Vehicles in Canada in 2022\nlinter-yaml-title-alias: Most Stolen Vehicles in Canada in 2022\n---\n\n# Most Stolen Vehicles in Canada in 2022\n\nIt was CRV. It was the second highest in terms of crime rate.\n\n## References\n\n- [The 10 Most Stolen Vehicles in Canada in 2022 - RATESDOTCA](https://rates.ca/resources/10-most-stolen-vehicles-canada-announced)\n","title":"Most Stolen Vehicles in Canada in 2022","referenced":["20230906110216"]},"20230906110216":{"body":"---\ntitle: \"[MOC] Car\"\naliases:\n  - \"[MOC] Car\"\n  - Car\nlinter-yaml-title-alias: \"[MOC] Car\"\n---\n\n# [MOC] Car\n\n## Maintenance\n\n- [[20230910085426|Car Maintenance Checklist]]\n\n### Car Paints\n\n- [[20230906112745|Layers of Car Paints]]\n- [[20230910014412|How to Repair Scratches on Car]]\n\n## Protection\n\n- [[20230906110152|Most Stolen Vehicles in Canada in 2022]]\n\n## Gas Price\n\n- [[20231018095840|Gas Price Forecast]]\n","title":"[MOC] Car","referenced":["20230829185108"]},"20230906112745":{"body":"---\ntitle: Layers of Car Paints\naliases:\n  - Layers of Car Paints\nlinter-yaml-title-alias: Layers of Car Paints\n---\n\n# Layers of Car Paints\n\n5 layers\n\n- Wax / Coating Layer / PPF\n- Clear Coat\n- Base Coat / Color Coat\n- Primer\n- Metal\n\n## Wax / Coating Layer / PPF\n\n- Acts as a sacrificial layer\n- Protects against air / UV / water\n- Thin layer\n\n## Clear Coat\n\n- No color\n- Protects against UV\n- Protects the inner layer\n- Makes the car looks shiny\n\n## Base Coat / Color Coat\n\n- Raw paint so no hardener or strengthener\n- No protection\n\n## Primer\n\n- Make the surface ready for painting\n- Without it, the color paint won't stick consistently\n\n## Metal\n\n- The bare metal\n\n## References\n\n- [How to Identify the Type of Scratch on a Cars Paint  DriveDetailed](https://drivedetailed.com/how-to-identify-the-type-of-scratches-on-cars-paint/)\n","title":"Layers of Car Paints","referenced":["20230906110216"]},"20230910014412":{"body":"---\ntitle: How to Repair Scratches on Car\naliases:\n  - How to Repair Scratches on Car\nlinter-yaml-title-alias: How to Repair Scratches on Car\n---\n\n# How to Repair Scratches on Car\n\nFirst, need to find out the colour code for the paint on driver's door.\n\nThese are the materials needed. For painting, we need\n\n- Sandpapers 80 to 2500\n- Blue Painter's tape\n- Sandable Primer\n- Basecoat Color\n- Gloss Clear Coat\n- Plastic Spreaders\n- Body Filler\n\nTo make the Paint Shinier, we need\n\n- Compound\n- Polish\n- Micro-fibre Towels\n- Polish Sponges\n\n## Steps\n\n### Sanding\n\n- Use 180 grit sandpaper to sand the scratches\n- Clean the dusts with a clean micro-fibre towel\n\n### Body Filter and Hardener\n\n- Body filter is for deep scratches\n- Mix body filter with hardener with ratio according to instruction\n- Locate all deep scratches\n- Use the plastic filler to apply body filler\n- Let the filler to dry for 10 minutes\n- Use 80 grit sandpaper to sand the area\n- Use 180 grid sandpaper to sand the area again\n- Clean the area with micro-fibre towel\n\n### Painting\n\n- Use blue painter tape to cover areas that don't need the paint\n\t- e.g. Light, bumper, wheel\n\t- Can use tape with paper as well\n- Wear a mask and goggle for safety\n- Use sandable primer and apply a light coat\n- Wait for 5 minutes\n- Apply another coat of primer, covering more areas\n- Wait for another 5 minutes\n- Apply another coat of primer, covering even more areas\n- Wait for 30 minutes\n- Use a **wet** 800 grit sandpaper to sand the area\n- Clean the area\n- Use a **wet** 1500 grit sandpaper to sand the area\n- Clean the area\n- Use a **wet** 2500 grit sandpaper to sand the area\n- Make sure the area is smooth before painting\n- Clean the area\n- Spray the color with light coat, and wait for 5 minutes\n- Spray the color again covering more areas, and wait for 5 minutes\n- Spray the color again with even more areas, and wait for 30 minutes\n- Apply clear coats with 5 minutes waiting between each coat, and each coat covering more and more areas\n- Let it dry overnight\n\n### Cleaning\n\n- Clean with watch and micro-fibre towel.\n- Let it dry for 5 minutes\n- Apply compound using a sponge\n- Polish with a firm pressure in overlapping passes\n- After 5 passes, clean the compound off with a clean micro-fibre towel\n- Let it dry for 5 minutes\n- Apply polish using a sponge with a firm pressure in overlapping passes\n- After 5 passes, clean the polish off with a clean micro-fibre towel\n\n## Reference\n\n- [How to Repair Scratches on your Car  Save Hundreds of Dollars - YouTube](https://www.youtube.com/watch?v=-EiAN6oa_oY)\n","title":"How to Repair Scratches on Car","referenced":["20230906110216"]},"20230910085426":{"body":"---\ntitle: Car Maintenance Checklist\naliases:\n  - Car Maintenance Checklist\nlinter-yaml-title-alias: Car Maintenance Checklist\n---\n\n# Car Maintenance Checklist\n\n## Monthly Checkup\n\n- Inspect tires\n\t- Check tire pressure, including spare tire\n\t- Tire tread depth - use $2\n- Test lights\n\t- High beam, brake, backup, turn signal\n- Check oils and coolant levels\n- Inspect windshield\n\t- Blade - look for cracks, splits, damage\n\n## Quarterly Checkup\n\n- Change oil\n- Change oil filter\n- Inspect belts and hoses\n- Check car battery and cables\n\n## Seasonal Checkup\n\n- Swap tires\n- Replace wiper blades\n- Check washer fluid levels\n\n## Yearly Checkup\n\n- Replace cabin and engine air filters\n- Rotate tires\n- Check brakes\n- Lubricate hinges\n\n## Reference\n\n- [Car Maintenance 101 Ultimate Vehicle Maintenance Checklist  CARFAX Canada  CARFAX Canada](https://www.carfax.ca/resource-centre/articles/car-maintenance-guide)\n","title":"Car Maintenance Checklist","referenced":["20230906110216"]},"20230918222805":{"body":"---\ntitle: Principles of Unit Testing\naliases:\n  - Principles of Unit Testing\nlinter-yaml-title-alias: Principles of Unit Testing\n---\n\n# Principles of Unit Testing\n\n**Lean and accurate testing**\n\n- Unit tests should be simple to work with\n\t- Design unit test for system 1 of the [[20230906105654|brain systems (TODO: write about brain systems)]]\n\t- Anyone (most importantly, future self) should be able to understand the test in less than 30 seconds\n- Don't pursue coverage percentage - adding useless tests is unnecessary.\n- Test only the business logic and principal edge cases\n\n**Test the behaviour, not the implementation**\n\n- Focus on the result. The result should always the same even after refactoring.\n\n**Test naming and structuring - AAA pattern**\n\n- Good naming and structure help identifying the failure quickly\n\t- _What_ is being tested?\n\t- Under _what circumstances_?\n\t- What is the _expected outcome_?\n- AAA pattern\n\t- Arrange - set up of the code - variables, mocked response, ...\n\t- Act - execute the code\n\t- Assert - check the result\n\n**Deterministic and isolated tests**\n\n- Tests should be independent and isolated. A failed test should not affect the others. This make it easier to locate the exact cause of the issue\n- Each test should deal with one logic at a time\n\n**Property-based testing and realistic data**\n\n- In property-based testing, you describe the properties of the code, the testing library will generate randomized inputs for the tests.\n\t- [jsverifyjsverify Write powerful and concise tests. Property-based testing for JavaScript. Like QuickCheck.](https://github.com/jsverify/jsverify) - last updated 2021-04-05\n\t- [dubzzzfast-check Property based testing framework for JavaScript (like QuickCheck) written in TypeScript](https://github.com/dubzzz/fast-check)\n\n## Reference\n\n- [goldbergyonijavascript-testing-best-practices 📗🌐 🚢 Comprehensive and exhaustive JavaScript & Node.js testing best practices (July 2023)](https://github.com/goldbergyoni/javascript-testing-best-practices)\n- [The 5 principles of Unit Testing - DEV Community](https://dev.to/one-beyond/the-5-principles-of-unit-testing-1p5f?utm_source=tldrwebdev)\n","title":"Principles of Unit Testing","referenced":["20230918233440","20230929005758"]},"20230918233440":{"body":"---\ntitle: \"[MOC] Testing\"\naliases:\n  - \"[MOC] Testing\"\n  - Testing\nlinter-yaml-title-alias: \"[MOC] Testing\"\n---\n\n# [MOC] Testing\n\n- [[20230925235139|Planning the Tests]]\n- [[20230925232619|Manual Testing Vs Automated Testing]]\n- [[20230925235245|Opaque Box versus Clear Box]]\n- [[20230926230011|Type of Automated Testing]]\n\n## Unit Test\n\n- [[20230918222805|Principles of Unit Testing]]\n","title":"[MOC] Testing","referenced":["20230829185108","20230929005758"]},"20230918233833":{"body":"---\ntitle: Preparing for Coding Interview\naliases:\n  - Preparing for Coding Interview\nlinter-yaml-title-alias: Preparing for Coding Interview\n---\n\n# Preparing for Coding Interview\n\n[[TODO]]: [How to pass a coding interview with me  Robert Heaton](https://robertheaton.com/interview/)\n\nThis is just a copy of headings. Need to read it in details\n\n- Before the interview\n\t- If you do Google the question beforehand, delete your tracks afterwards\n\t- Set up a basic program and make sure you can run it\n- Introduction\n\t- Keep your personal intro short\n\t- Ask how much time you have to answer the question\n- When you get the question\n\t- Restate the question, briefly\n\t- Ask a clarifying question or two\n\t- Ask how you’re being assessed\n\t\t- How far are you supposed to get?\n\t\t- Is the interviewer looking for efficient code, clean code, or both?\n\t\t- Should you write tests?\n\t- Sketch a solution that works for at least the base case\n- Debugging\n\t- Run your code frequently\n\t- Use hypotheses to debug\n\t- Common trivial mistakes\n\t- Consider asking for help\n- Talking\n\t- Don’t badmouth languages, libraries, or anything really\n\t- Talk as much as you reasonably can\n- Writing the code\n\t- Don’t define lots of functions or classes unless you’re very certain it’s a good idea\n\t- Use TODOs\n- Testing\n\t- Write tests\n\t- Don’t use a testing framework unless you’re required to, or you’re very confident with it\n\t- If a test passes, print `pass`\n\t- If all your tests pass first time, try to make them fail\n\t- Don’t do full TDD unless you actually find it helpful\n\t- Keep your tests\n","title":"Preparing for Coding Interview","referenced":["20230905182219"]},"20230923165717":{"body":"---\ntitle: \"[MOC] macOS\"\naliases:\n  - \"[MOC] macOS\"\n  - macOS\nlinter-yaml-title-alias: \"[MOC] macOS\"\n---\n\n# [MOC] macOS\n\n## Tips\n\n- [[20230923165842|Override Error about Developer Cannot Be Verified]]\n","title":"[MOC] macOS","referenced":["20230829185108"]},"20230923165842":{"body":"---\ntitle: Override Error about Developer Cannot Be Verified\naliases:\n  - Override Error about Developer Cannot Be Verified\nlinter-yaml-title-alias: Override Error about Developer Cannot Be Verified\n---\n\n# Override Error about Developer Cannot Be Verified\n\n**Only do this when the source can be trusted**\n\n- Control + click the app and open the app\n- If need to execute in shell\n\n```shell\nxattr -d com.apple.quarantine <file_name>\n```\n","title":"Override Error about Developer Cannot Be Verified","referenced":["20230923165717","20230923172940"]},"20230923172901":{"body":"---\ntitle: \"[MOC] Universe\"\naliases:\n  - \"[MOC] Universe\"\n  - Universe\nlinter-yaml-title-alias: \"[MOC] Universe\"\n---\n\n# [MOC] Universe\n\n## Celestia App\n\n- [[20230923172940|Install Celestia Origin on macOS Ventura]]\n","title":"[MOC] Universe","referenced":["20230829185108"]},"20230923172940":{"body":"---\ntitle: Install Celestia Origin on macOS Ventura\naliases:\n  - Install Celestia Origin on macOS Ventura\nlinter-yaml-title-alias: Install Celestia Origin on macOS Ventura\n---\n\n# Install Celestia Origin on macOS Ventura\n\n1. Install Celestia with `brew install celestia`\n1. Download the torrent file `[Celestia Origin v.13 (30.04.2021).torrent]` from the [Celestia Proejct post](https://celestiaproject.space/forum/viewtopic.php?f=23&t=21114)\n\t- I used [agalwood/Motrix A full-featured download manager](https://github.com/agalwood/Motrix) to download the torrent\n1. Unpack `Celestia Origin v.13 - Core (30.04.2021).7z`\n1. Change the permissions for `Installers/modules/7zr_macos` to 755 (not sure if 644 works but 755 is what I tried)\n1. Remove the quarantine flag for `Installers/modules/7zr_macos`. See [[20230923165842|Override Error about Developer Cannot Be Verified]]\n1. Run `Installers/macOS_Install_CO.sh` and fill in the paths if not found.\n","title":"Install Celestia Origin on macOS Ventura","referenced":["20230923172901"]},"20230925232619":{"body":"---\ntitle: Manual Testing Vs Automated Testing\naliases:\n  - Manual Testing Vs Automated Testing\nlinter-yaml-title-alias: Manual Testing Vs Automated Testing\n---\n\n# Manual Testing Vs Automated Testing\n\n- **Manual testing**\n\t- test if the application works; also try to break it\n\t- usually, there is a plan / checklist to test against\n- **Automated testing**\n\t- implement tests for repetitive and monotonous tests\n\t- free people up to work on creative works\n\n## Reference\n\n- [Three common types of test automation](https://web.dev/ta-types/)\n","title":"Manual Testing Vs Automated Testing","referenced":["20230918233440","20230925235139"]},"20230925235139":{"body":"---\ntitle: Planning the Tests\naliases:\n  - Planning the Tests\nlinter-yaml-title-alias: Planning the Tests\n---\n\n# Planning the Tests\n\n- [[20230925232619|Manual Testing Vs Automated Testing]]\n- [[20230925235245|Opaque Box versus Clear Box]]\n","title":"Planning the Tests","referenced":["20230918233440"]},"20230925235245":{"body":"---\ntitle: Opaque Box versus Clear Box\naliases:\n  - Opaque Box versus Clear Box\nlinter-yaml-title-alias: Opaque Box versus Clear Box\n---\n\n# Opaque Box versus Clear Box\n\n- **Opaque box testing** (black box testing)\n\t- by requirement\n\t- no need to consider internal structure\n- **Clear box testing** (white box testing)\n\t- need to know how the application work\n\n## Reference\n\n- [Three common types of test automation](https://web.dev/ta-types/)\n","title":"Opaque Box versus Clear Box","referenced":["20230918233440","20230925235139"]},"20230926230011":{"body":"---\ntitle: Type of Automated Testing\naliases:\n  - Type of Automated Testing\nlinter-yaml-title-alias: Type of Automated Testing\n---\n\n# Type of Automated Testing\n\n- **Unit Testing**\n\t- Test the units of an application _individually_\n\t- Aim at execution speed, isolation, maintainability\n\t- Examples: Vitest, jest\n- **Integration Testing**\n\t- Interactions between components. e.g. API / component test\n\t- Examples: WebdriverIO / Cypress\n- **End-to-end Testing**\n\t- Test the UI from one end to the other\n\t- Simulate genuine user interactions\n\t\t- Cost time and computing power - higher cost\n\t- Examples: WebdriverIO / Cypress / Playwright / Selenium\n\t- **Visual UI Testing**\n\t\t- Subset of end-to-end testing\n\t\t- Take screenshots for changes for human to review\n- **Static Analysis**\n\t- Scan code for defects and errors\n\t- Examples: ESLint / StyleLint\n\n## Reference\n\n- [Three common types of test automation](https://web.dev/ta-types/)\n","title":"Type of Automated Testing","referenced":["20230918233440"]},"20230929005758":{"body":"---\ntitle: Reading List\naliases:\n  - Reading List\nlinter-yaml-title-alias: Reading List\n---\n\n# Reading List\n\nA prioritized list of reading material that I want to read. The priority is based on my current need.\n\nEach item should follow this pattern\n\n```markdown\n- [title](url)\n\t- Related MOCs: ...\n\t- Related notes (optional):\n\t\t- ...\n\t- Comment (optional): ... \n```\n\n- [To test or not to test, a technical perspective](https://web.dev/ta-what-to-test/?utm_source=tldrwebdev)\n\t- Related MOCs: [[20230918233440|Testing]]\n\t- Related notes:\n\t\t- [[20230918222805|Principles of Unit Testing]]\n- [The Node.js best practices list](https://github.com/goldbergyoni/nodebestpractices)\n\t- Related MOCs: [[20230905181647|JavaScript]]\n- [Comprehensive and exhaustive JavaScript & Node.js testing best practices](https://github.com/goldbergyoni/javascript-testing-best-practices)\n\t- Related MOCs: [[20230918233440|Testing]] [[20230905181647|JavaScript]]\n\t- Related notes:\n\t\t- [[20230918222805|Principles of Unit Testing]]\n\t- Comment: this is more comprehensive than \"To test or not to test, a technical perspective\"\n","title":"Reading List","referenced":[]},"20231018095840":{"body":"---\ntitle: Gas Price Forecast\naliases:\n  - Gas Price Forecast\nlinter-yaml-title-alias: Gas Price Forecast\n---\n\n# Gas Price Forecast\n\n- [Toronto & GTA Gas Prices  CityNews Toronto](https://toronto.citynews.ca/toronto-gta-gas-prices/)\n- [Gas Price Predictions - Gas Wizard](https://gaswizard.ca/gas-price-predictions/)\n","title":"Gas Price Forecast","referenced":["20230906110216"]}}