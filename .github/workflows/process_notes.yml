# Modified from https://github.com/lumen-notes/lumen/blob/f542812adc7ab2c1a23cb2cae1228ae7f34d5b98/.github/workflows/lumen.yml
name: Process Notes
on: [push]
jobs:
  process-notes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Generate notes.json
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const FILENAME_REGEX = /.+\.md$/;
            const WIKILINK_REGEX = /\[\[([^\]]+)\|([^\]]+)\]\]/g;

            const notes = {};
            const mappings = [];

            const extractWikilinks = markdown =>
              Array.from(new Set([...markdown.matchAll(WIKILINK_REGEX)].map(match => match[1])));

            fs.readdirSync(process.cwd())
              .filter(filename => FILENAME_REGEX.test(filename))
              .forEach(filename => {
                const id = path.basename(filename, ".md");

                const body = fs.readFileSync(filename, "utf-8");

                const wikilinks = extractWikilinks(body);
                wikilinks.forEach(toId => mappings.push({from: id, to: toId}));

                notes[id] = {body, references: wikilinks};
              });

              Object.keys(notes).forEach(id => {
                notes[id]["referenced"] = mappings
                  .filter(({to}) => to === id)
                  .map(mapping => mapping.from);
              });

              if (!fs.existsSync(".metadata")) {
                fs.mkdirSync(".metadata")
              };

              fs.writeFileSync(".metadata/notes.json", JSON.stringify(notes));
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Generate notes.json'
